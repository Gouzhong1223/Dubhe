<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.dubhe.data.dao.DatasetVersionFileMapper">
    <insert id="saveList">
        INSERT INTO data_dataset_version_file (id, dataset_id, version_name,file_id, `status`, annotation_status,
        backup_status,changed,file_name)
        values
        <foreach collection="datasetVersionFiles" item="temp" separator=",">
            (#{temp.id}, #{temp.datasetId}, #{temp.versionName}, #{temp.fileId}, #{temp.status},
            #{temp.annotationStatus}
            <choose>
                <when test="temp.backupStatus != null">
                    , #{temp.backupStatus}
                </when>
                <otherwise>
                    ,101
                </otherwise>
            </choose>
            ,#{temp.changed}
            ,#{temp.fileName}
            )
        </foreach>
    </insert>

    <select id="getNeedEnhanceFilesByDatasetIdAndVersionName"
            resultType="org.dubhe.data.domain.entity.DatasetVersionFile">
        select ddvf.* from data_dataset_version_file ddvf left join data_file df on ddvf.file_id = df.id
        where ddvf.dataset_id = #{datasetId} and df.dataset_id = #{datasetId} and ddvf.`status` <![CDATA[<>]]> 1 and df.pid = 0
        <if test="versionName != null">
            and ddvf.version_name = #{versionName}
        </if>
    </select>

    <select id="getEnhanceFileList" resultType="org.dubhe.data.domain.entity.File">
        select df.* from data_dataset_version_file ddvf left join data_file df on ddvf.file_id = df.id
        where ddvf.dataset_id = #{datasetId} and df.dataset_id = #{datasetId}
        <if test="versionName != null">
            and ddvf.version_name = #{versionName}
        </if>
        and df.pid = #{fileId}
    </select>

    <select id="getEnhanceFileCount" resultType="java.lang.Integer">
        select count(1) from data_dataset_version_file ddvf left join data_file df on ddvf.file_id = df.id
        where ddvf.dataset_id = #{datasetId} and df.dataset_id = #{datasetId}
        <if test="versionName != null">
            and ddvf.version_name = #{versionName}
        </if>
        and df.enhance_type is not null
    </select>

    <select id="getSourceFileCount" resultType="java.lang.Integer">
        select count(1) from data_dataset_version_file ddvf left join data_file df on ddvf.file_id = df.id
        where ddvf.dataset_id = #{dataset.id} AND df.dataset_id = #{dataset.id}
        <if test="dataset.currentVersionName != null">
            and ddvf.version_name = #{dataset.currentVersionName}
        </if>
        and isnull(enhance_type)
    </select>


    <select id="listDatasetVersionFileByDatasetIds" resultType="org.dubhe.data.domain.entity.DatasetVersionFile">
        select ddvf.* from data_dataset_version_file ddvf
        left join data_dataset dd on ddvf.dataset_id = dd.id
        where ddvf.dataset_id in
        <foreach collection="list" item="datasetId" open="(" close=")" separator=",">
            #{datasetId}
        </foreach>
        and (ddvf.version_name = dd.current_version_name or dd.current_version_name is null)
    </select>

    <select id="getDatasetVersionFileCount" resultType="java.util.HashMap">
        select annotation_status as status ,count(1) `count` from data_dataset_version_file where dataset_id =
        #{datasetId}
        and status != 1
        <if test="versionName != null">
            and version_name = #{versionName}
        </if>
        group by annotation_status
    </select>

    <select id="findFileStatusListByDatasetAndVersion" resultType="java.lang.Integer">
        select distinct annotation_status from data_dataset_version_file where dataset_id = #{datasetId} and status !=1
        <if test="versionName != null">
            and version_name = #{versionName}
        </if>
    </select>

    <select id="findByDatasetIdAndVersionName" resultType="org.dubhe.data.domain.entity.DatasetVersionFile">
        select * from data_dataset_version_file where dataset_id = #{datasetId}
        and version_name
        <choose>
            <when test = "versionName == null">
                is
            </when>
            <otherwise>
                =
            </otherwise>
        </choose>
        #{versionName} and status = 2
    </select>

    <update id="newShipVersionNameChange">
        update data_dataset_version_file set status = 2,backup_status = annotation_status, version_name = #{versionTarget}
        where dataset_id = #{datasetId} and status = 0
        <if test="versionSource != null">
            and version_name = #{versionSource}
        </if>
    </update>

    <update id="rollbackFileAndAnnotationStatus">
        update data_dataset_version_file
        set
        status=(case status
        when 0 then 1
        when 1 then 2
         else status end ),
         annotation_status = backup_status,
         changed = 0
          where dataset_id = #{datasetId}  and changed = #{changed}
        <if test="versionName != null">
            and version_name = #{versionName}
        </if>
    </update>

    <update id="deleteShip">
        update data_dataset_version_file
        set
        status = 1,changed = 1
        where dataset_id = #{datasetId} and file_id in
        <foreach collection="fileIds" item="fileId" separator="," open="(" close=")">
            #{fileId}
        </foreach>
        <if test="versionName != null">
            and version_name = #{versionName}
        </if>
    </update>

    <select id="findStatusByDatasetIdAndVersionName" resultType="org.dubhe.data.domain.entity.DatasetVersionFile">
        select * from data_dataset_version_file
        where dataset_id = #{datasetId}
        <if test="versionName != null">
            and version_name = #{versionName}
        </if>
    </select>

    <select id="getIdByDatasetIdAndAnnotationStatus"  resultType="java.lang.Integer">
        select ddvf.id from data_dataset_version_file ddvf
                                left join data_file_annotation dfa on ddvf.id = dfa.version_file_id
        where ddvf.dataset_id=#{datasetId} and ddvf.status in (0,2) and ddvf.annotation_status in
        <foreach item="status" collection="status" separator="," open="(" close=")">
            #{status}
        </foreach>
        <if test="versionName != null">
            and ddvf.version_name = #{versionName}
        </if>
        <if test="labelId != null">
            and dfa.label_id = #{labelId}
        </if>
        <choose>
            <when test="orderByName=='name'">
                order by ddvf.file_name
            </when>
            <when test="orderByName=='prediction'">
                order by dfa.prediction ${order}
            </when>
            <otherwise>
                order by ddvf.id desc
            </otherwise>
        </choose>
            limit #{offset}, #{limit}
    </select>

    <select id="getListByDatasetIdAndAnnotationStatus" resultType="org.dubhe.data.domain.dto.DatasetVersionFileDTO">

        select ddvf.dataset_id,ddvf.file_id,ddvf.status,ddvf.annotation_status,ddvf.backup_status
        ,ddvf.changed,ddvf.file_name,dfa.label_id,dfa.prediction from data_dataset_version_file ddvf
        left join data_file_annotation dfa on ddvf.id = dfa.version_file_id
        where ddvf.dataset_id=#{datasetId} and ddvf.status in (0,2) and ddvf.id in
        <foreach item="id" collection="versionFileIdList" separator="," open="(" close=")">
            #{id}
        </foreach>
        <choose>
            <when test="orderByName=='name'">
                order by ddvf.file_name
            </when>
            <when test="orderByName=='prediction'">
                order by dfa.prediction ${order}
            </when>
            <otherwise>
                order by ddvf.id desc
            </otherwise>
        </choose>
    </select>


    <update id="updateByFileIdAndCurrentVersionName">
        update data_dataset_version_file set prediction = #{prediction}
        <where>
            dataset_id = #{datasetId}   and file_id = #{fileId}
            <if test="currentVersionName != null">
                and version_name = #{currentVersionName}
            </if>
        </where>
    </update>


    <select id="selectByDatasetIdAndVersionNameAndFileIds" resultType="org.dubhe.data.domain.entity.DatasetVersionFile">
        select ddvf.id,ddvf.dataset_id,ddvf.file_id,ddvf.status,ddvf.annotation_status,ddvf.backup_status
                ,ddvf.changed,ddvf.file_name from data_dataset_version_file ddvf
        where ddvf.dataset_id=#{datasetId} and ddvf.status in (0,2)
          <if test="versionName != null">
              and ddvf.version_name =#{versionName}
          </if>
           and ddvf.file_id in
           <foreach item="fileId" collection="fileIds" separator="," open="(" close=")">
              #{fileId}
            </foreach>
    </select>

</mapper>